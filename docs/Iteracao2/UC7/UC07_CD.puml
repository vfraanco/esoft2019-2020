@startuml
skinparam classAttributeIconSize 0

left to right direction

class RegistarFreelancerUI {
    
}

class RegistarFreelancerController {
    
  +novoFrelancer(nome, nif, endpost, tele, email)
  +novaHabilitacaoAcademica(grau, descCurso, instituicao, medCurso)
  +novoReconhecimentoCT(data, compTecnica, grauProficiencia)
  +registaFreelancer()  
}

class Plataforma {
  -String designacao
  
  +RegistoFreelancer getRegistoFreelancer()
}

class RegistoFreelancer {
    
  +Freelancer novoFrelancer(nome, nif, endpost, tele, email)
  +registaFreelancer(fr)
  +validaFreelancer(fr)
  -addFreelancer(fr)
  
}

class Freelancer {
  -String nome
  -String NIF
  -String telefone
  -String email

   +Freelancer(nome, nif, endpost, tele, email)
   +novaHabilitacaoAcademica(grau, descCurso, instituicao, medCurso)
   +novoReconhecimentoCT(data, compTecnica, grauProficiencia)
   
}

class HabilitacaoAcademica {
  -String grau
  -String designacao 
  -String instituicao 
  -String media

  +HabilitacaoAcademica(grau, descCurso, instituicao, medCurso)
}

class ReconhecimentoCompetenciaTecnica {
  -String data
  -String competenciaTecnica
  -String grauProficiencia
  
  +ReconhecimentoCT(data, compTecnica, grauProficiencia)
}

class EnderecoPostal {
  -String local
  -String codPostal
  -String localidade
  
  +EnderecoPostal(endPostal)
}


class Utilizador {
  -String nome
  -String email
  -String password
}

class AutorizacaoFacade {
   +registaUtilizadorComPapeis(nome,email,pwd,listaPapel)
}

RegistarFreelancerUI ..> RegistarFreelancerController
RegistarFreelancerController ..> Plataforma
RegistarFreelancerController ..> RegistoFreelancer
RegistarFreelancerController ..> Freelancer
RegistoFreelancer "1" -- "*" Freelancer : tem registados >
Freelancer "1" -- "0..*" HabilitacaoAcademica: possui >
Freelancer "1" -- "0..*" ReconhecimentoCompetenciaTecnica: possui >
Freelancer "1" -- "1" EnderecoPostal: tem  >
Freelancer "0..1" -- "1" Utilizador: atua como >

@enduml


